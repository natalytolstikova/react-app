{"ast":null,"code":"'use strict';\n\nconst Dispatcher = require('./dispatcher');\nconst {\n  ClientDestroyedError,\n  ClientClosedError,\n  InvalidArgumentError\n} = require('../core/errors');\nconst {\n  kDestroy,\n  kClose,\n  kClosed,\n  kDestroyed,\n  kDispatch,\n  kInterceptors\n} = require('../core/symbols');\nconst kOnDestroyed = Symbol('onDestroyed');\nconst kOnClosed = Symbol('onClosed');\nconst kInterceptedDispatch = Symbol('Intercepted Dispatch');\nclass DispatcherBase extends Dispatcher {\n  constructor() {\n    super();\n    this[kDestroyed] = false;\n    this[kOnDestroyed] = null;\n    this[kClosed] = false;\n    this[kOnClosed] = [];\n  }\n  get destroyed() {\n    return this[kDestroyed];\n  }\n  get closed() {\n    return this[kClosed];\n  }\n  get interceptors() {\n    return this[kInterceptors];\n  }\n  set interceptors(newInterceptors) {\n    if (newInterceptors) {\n      for (let i = newInterceptors.length - 1; i >= 0; i--) {\n        const interceptor = this[kInterceptors][i];\n        if (typeof interceptor !== 'function') {\n          throw new InvalidArgumentError('interceptor must be an function');\n        }\n      }\n    }\n    this[kInterceptors] = newInterceptors;\n  }\n  close(callback) {\n    if (callback === undefined) {\n      return new Promise((resolve, reject) => {\n        this.close((err, data) => {\n          return err ? reject(err) : resolve(data);\n        });\n      });\n    }\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback');\n    }\n    if (this[kDestroyed]) {\n      queueMicrotask(() => callback(new ClientDestroyedError(), null));\n      return;\n    }\n    if (this[kClosed]) {\n      if (this[kOnClosed]) {\n        this[kOnClosed].push(callback);\n      } else {\n        queueMicrotask(() => callback(null, null));\n      }\n      return;\n    }\n    this[kClosed] = true;\n    this[kOnClosed].push(callback);\n    const onClosed = () => {\n      const callbacks = this[kOnClosed];\n      this[kOnClosed] = null;\n      for (let i = 0; i < callbacks.length; i++) {\n        callbacks[i](null, null);\n      }\n    };\n\n    // Should not error.\n    this[kClose]().then(() => this.destroy()).then(() => {\n      queueMicrotask(onClosed);\n    });\n  }\n  destroy(err, callback) {\n    if (typeof err === 'function') {\n      callback = err;\n      err = null;\n    }\n    if (callback === undefined) {\n      return new Promise((resolve, reject) => {\n        this.destroy(err, (err, data) => {\n          return err ? /* istanbul ignore next: should never error */reject(err) : resolve(data);\n        });\n      });\n    }\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback');\n    }\n    if (this[kDestroyed]) {\n      if (this[kOnDestroyed]) {\n        this[kOnDestroyed].push(callback);\n      } else {\n        queueMicrotask(() => callback(null, null));\n      }\n      return;\n    }\n    if (!err) {\n      err = new ClientDestroyedError();\n    }\n    this[kDestroyed] = true;\n    this[kOnDestroyed] = this[kOnDestroyed] || [];\n    this[kOnDestroyed].push(callback);\n    const onDestroyed = () => {\n      const callbacks = this[kOnDestroyed];\n      this[kOnDestroyed] = null;\n      for (let i = 0; i < callbacks.length; i++) {\n        callbacks[i](null, null);\n      }\n    };\n\n    // Should not error.\n    this[kDestroy](err).then(() => {\n      queueMicrotask(onDestroyed);\n    });\n  }\n  [kInterceptedDispatch](opts, handler) {\n    if (!this[kInterceptors] || this[kInterceptors].length === 0) {\n      this[kInterceptedDispatch] = this[kDispatch];\n      return this[kDispatch](opts, handler);\n    }\n    let dispatch = this[kDispatch].bind(this);\n    for (let i = this[kInterceptors].length - 1; i >= 0; i--) {\n      dispatch = this[kInterceptors][i](dispatch);\n    }\n    this[kInterceptedDispatch] = dispatch;\n    return dispatch(opts, handler);\n  }\n  dispatch(opts, handler) {\n    if (!handler || typeof handler !== 'object') {\n      throw new InvalidArgumentError('handler must be an object');\n    }\n    try {\n      if (!opts || typeof opts !== 'object') {\n        throw new InvalidArgumentError('opts must be an object.');\n      }\n      if (this[kDestroyed] || this[kOnDestroyed]) {\n        throw new ClientDestroyedError();\n      }\n      if (this[kClosed]) {\n        throw new ClientClosedError();\n      }\n      return this[kInterceptedDispatch](opts, handler);\n    } catch (err) {\n      if (typeof handler.onError !== 'function') {\n        throw new InvalidArgumentError('invalid onError method');\n      }\n      handler.onError(err);\n      return false;\n    }\n  }\n}\nmodule.exports = DispatcherBase;","map":{"version":3,"names":["Dispatcher","require","ClientDestroyedError","ClientClosedError","InvalidArgumentError","kDestroy","kClose","kClosed","kDestroyed","kDispatch","kInterceptors","kOnDestroyed","Symbol","kOnClosed","kInterceptedDispatch","DispatcherBase","constructor","destroyed","closed","interceptors","newInterceptors","i","length","interceptor","close","callback","undefined","Promise","resolve","reject","err","data","queueMicrotask","push","onClosed","callbacks","then","destroy","onDestroyed","opts","handler","dispatch","bind","onError","module","exports"],"sources":["/Users/nataliia/PussyProjects/react-app/node_modules/undici/lib/dispatcher/dispatcher-base.js"],"sourcesContent":["'use strict'\n\nconst Dispatcher = require('./dispatcher')\nconst {\n  ClientDestroyedError,\n  ClientClosedError,\n  InvalidArgumentError\n} = require('../core/errors')\nconst { kDestroy, kClose, kClosed, kDestroyed, kDispatch, kInterceptors } = require('../core/symbols')\n\nconst kOnDestroyed = Symbol('onDestroyed')\nconst kOnClosed = Symbol('onClosed')\nconst kInterceptedDispatch = Symbol('Intercepted Dispatch')\n\nclass DispatcherBase extends Dispatcher {\n  constructor () {\n    super()\n\n    this[kDestroyed] = false\n    this[kOnDestroyed] = null\n    this[kClosed] = false\n    this[kOnClosed] = []\n  }\n\n  get destroyed () {\n    return this[kDestroyed]\n  }\n\n  get closed () {\n    return this[kClosed]\n  }\n\n  get interceptors () {\n    return this[kInterceptors]\n  }\n\n  set interceptors (newInterceptors) {\n    if (newInterceptors) {\n      for (let i = newInterceptors.length - 1; i >= 0; i--) {\n        const interceptor = this[kInterceptors][i]\n        if (typeof interceptor !== 'function') {\n          throw new InvalidArgumentError('interceptor must be an function')\n        }\n      }\n    }\n\n    this[kInterceptors] = newInterceptors\n  }\n\n  close (callback) {\n    if (callback === undefined) {\n      return new Promise((resolve, reject) => {\n        this.close((err, data) => {\n          return err ? reject(err) : resolve(data)\n        })\n      })\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    if (this[kDestroyed]) {\n      queueMicrotask(() => callback(new ClientDestroyedError(), null))\n      return\n    }\n\n    if (this[kClosed]) {\n      if (this[kOnClosed]) {\n        this[kOnClosed].push(callback)\n      } else {\n        queueMicrotask(() => callback(null, null))\n      }\n      return\n    }\n\n    this[kClosed] = true\n    this[kOnClosed].push(callback)\n\n    const onClosed = () => {\n      const callbacks = this[kOnClosed]\n      this[kOnClosed] = null\n      for (let i = 0; i < callbacks.length; i++) {\n        callbacks[i](null, null)\n      }\n    }\n\n    // Should not error.\n    this[kClose]()\n      .then(() => this.destroy())\n      .then(() => {\n        queueMicrotask(onClosed)\n      })\n  }\n\n  destroy (err, callback) {\n    if (typeof err === 'function') {\n      callback = err\n      err = null\n    }\n\n    if (callback === undefined) {\n      return new Promise((resolve, reject) => {\n        this.destroy(err, (err, data) => {\n          return err ? /* istanbul ignore next: should never error */ reject(err) : resolve(data)\n        })\n      })\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    if (this[kDestroyed]) {\n      if (this[kOnDestroyed]) {\n        this[kOnDestroyed].push(callback)\n      } else {\n        queueMicrotask(() => callback(null, null))\n      }\n      return\n    }\n\n    if (!err) {\n      err = new ClientDestroyedError()\n    }\n\n    this[kDestroyed] = true\n    this[kOnDestroyed] = this[kOnDestroyed] || []\n    this[kOnDestroyed].push(callback)\n\n    const onDestroyed = () => {\n      const callbacks = this[kOnDestroyed]\n      this[kOnDestroyed] = null\n      for (let i = 0; i < callbacks.length; i++) {\n        callbacks[i](null, null)\n      }\n    }\n\n    // Should not error.\n    this[kDestroy](err).then(() => {\n      queueMicrotask(onDestroyed)\n    })\n  }\n\n  [kInterceptedDispatch] (opts, handler) {\n    if (!this[kInterceptors] || this[kInterceptors].length === 0) {\n      this[kInterceptedDispatch] = this[kDispatch]\n      return this[kDispatch](opts, handler)\n    }\n\n    let dispatch = this[kDispatch].bind(this)\n    for (let i = this[kInterceptors].length - 1; i >= 0; i--) {\n      dispatch = this[kInterceptors][i](dispatch)\n    }\n    this[kInterceptedDispatch] = dispatch\n    return dispatch(opts, handler)\n  }\n\n  dispatch (opts, handler) {\n    if (!handler || typeof handler !== 'object') {\n      throw new InvalidArgumentError('handler must be an object')\n    }\n\n    try {\n      if (!opts || typeof opts !== 'object') {\n        throw new InvalidArgumentError('opts must be an object.')\n      }\n\n      if (this[kDestroyed] || this[kOnDestroyed]) {\n        throw new ClientDestroyedError()\n      }\n\n      if (this[kClosed]) {\n        throw new ClientClosedError()\n      }\n\n      return this[kInterceptedDispatch](opts, handler)\n    } catch (err) {\n      if (typeof handler.onError !== 'function') {\n        throw new InvalidArgumentError('invalid onError method')\n      }\n\n      handler.onError(err)\n\n      return false\n    }\n  }\n}\n\nmodule.exports = DispatcherBase\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}