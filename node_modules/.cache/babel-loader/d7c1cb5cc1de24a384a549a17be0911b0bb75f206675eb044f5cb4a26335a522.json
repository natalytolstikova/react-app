{"ast":null,"code":"'use strict';\n\nconst {\n  createInflateRaw,\n  Z_DEFAULT_WINDOWBITS\n} = require('node:zlib');\nconst {\n  isValidClientWindowBits\n} = require('./util');\nconst tail = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kBuffer = Symbol('kBuffer');\nconst kLength = Symbol('kLength');\nclass PerMessageDeflate {\n  /** @type {import('node:zlib').InflateRaw} */\n  #inflate;\n  #options = {};\n  constructor(extensions) {\n    this.#options.serverNoContextTakeover = extensions.has('server_no_context_takeover');\n    this.#options.serverMaxWindowBits = extensions.get('server_max_window_bits');\n  }\n  decompress(chunk, fin, callback) {\n    // An endpoint uses the following algorithm to decompress a message.\n    // 1.  Append 4 octets of 0x00 0x00 0xff 0xff to the tail end of the\n    //     payload of the message.\n    // 2.  Decompress the resulting data using DEFLATE.\n\n    if (!this.#inflate) {\n      let windowBits = Z_DEFAULT_WINDOWBITS;\n      if (this.#options.serverMaxWindowBits) {\n        // empty values default to Z_DEFAULT_WINDOWBITS\n        if (!isValidClientWindowBits(this.#options.serverMaxWindowBits)) {\n          callback(new Error('Invalid server_max_window_bits'));\n          return;\n        }\n        windowBits = Number.parseInt(this.#options.serverMaxWindowBits);\n      }\n      this.#inflate = createInflateRaw({\n        windowBits\n      });\n      this.#inflate[kBuffer] = [];\n      this.#inflate[kLength] = 0;\n      this.#inflate.on('data', data => {\n        this.#inflate[kBuffer].push(data);\n        this.#inflate[kLength] += data.length;\n      });\n      this.#inflate.on('error', err => {\n        this.#inflate = null;\n        callback(err);\n      });\n    }\n    this.#inflate.write(chunk);\n    if (fin) {\n      this.#inflate.write(tail);\n    }\n    this.#inflate.flush(() => {\n      const full = Buffer.concat(this.#inflate[kBuffer], this.#inflate[kLength]);\n      this.#inflate[kBuffer].length = 0;\n      this.#inflate[kLength] = 0;\n      callback(null, full);\n    });\n  }\n}\nmodule.exports = {\n  PerMessageDeflate\n};","map":{"version":3,"names":["createInflateRaw","Z_DEFAULT_WINDOWBITS","require","isValidClientWindowBits","tail","Buffer","from","kBuffer","Symbol","kLength","PerMessageDeflate","inflate","options","constructor","extensions","serverNoContextTakeover","has","serverMaxWindowBits","get","decompress","chunk","fin","callback","windowBits","Error","Number","parseInt","on","data","push","length","err","write","flush","full","concat","module","exports"],"sources":["/Users/nataliia/PussyProjects/react-app/node_modules/undici/lib/web/websocket/permessage-deflate.js"],"sourcesContent":["'use strict'\n\nconst { createInflateRaw, Z_DEFAULT_WINDOWBITS } = require('node:zlib')\nconst { isValidClientWindowBits } = require('./util')\n\nconst tail = Buffer.from([0x00, 0x00, 0xff, 0xff])\nconst kBuffer = Symbol('kBuffer')\nconst kLength = Symbol('kLength')\n\nclass PerMessageDeflate {\n  /** @type {import('node:zlib').InflateRaw} */\n  #inflate\n\n  #options = {}\n\n  constructor (extensions) {\n    this.#options.serverNoContextTakeover = extensions.has('server_no_context_takeover')\n    this.#options.serverMaxWindowBits = extensions.get('server_max_window_bits')\n  }\n\n  decompress (chunk, fin, callback) {\n    // An endpoint uses the following algorithm to decompress a message.\n    // 1.  Append 4 octets of 0x00 0x00 0xff 0xff to the tail end of the\n    //     payload of the message.\n    // 2.  Decompress the resulting data using DEFLATE.\n\n    if (!this.#inflate) {\n      let windowBits = Z_DEFAULT_WINDOWBITS\n\n      if (this.#options.serverMaxWindowBits) { // empty values default to Z_DEFAULT_WINDOWBITS\n        if (!isValidClientWindowBits(this.#options.serverMaxWindowBits)) {\n          callback(new Error('Invalid server_max_window_bits'))\n          return\n        }\n\n        windowBits = Number.parseInt(this.#options.serverMaxWindowBits)\n      }\n\n      this.#inflate = createInflateRaw({ windowBits })\n      this.#inflate[kBuffer] = []\n      this.#inflate[kLength] = 0\n\n      this.#inflate.on('data', (data) => {\n        this.#inflate[kBuffer].push(data)\n        this.#inflate[kLength] += data.length\n      })\n\n      this.#inflate.on('error', (err) => {\n        this.#inflate = null\n        callback(err)\n      })\n    }\n\n    this.#inflate.write(chunk)\n    if (fin) {\n      this.#inflate.write(tail)\n    }\n\n    this.#inflate.flush(() => {\n      const full = Buffer.concat(this.#inflate[kBuffer], this.#inflate[kLength])\n\n      this.#inflate[kBuffer].length = 0\n      this.#inflate[kLength] = 0\n\n      callback(null, full)\n    })\n  }\n}\n\nmodule.exports = { PerMessageDeflate }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}