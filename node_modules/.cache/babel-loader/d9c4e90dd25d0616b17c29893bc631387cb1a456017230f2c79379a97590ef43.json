{"ast":null,"code":"'use strict';\n\nconst {\n  InvalidArgumentError,\n  NotSupportedError\n} = require('./errors');\nconst assert = require('node:assert');\nconst {\n  isValidHTTPToken,\n  isValidHeaderValue,\n  isStream,\n  destroy,\n  isBuffer,\n  isFormDataLike,\n  isIterable,\n  isBlobLike,\n  buildURL,\n  validateHandler,\n  getServerName,\n  normalizedMethodRecords\n} = require('./util');\nconst {\n  channels\n} = require('./diagnostics.js');\nconst {\n  headerNameLowerCasedRecord\n} = require('./constants');\n\n// Verifies that a given path is valid does not contain control chars \\x00 to \\x20\nconst invalidPathRegex = /[^\\u0021-\\u00ff]/;\nconst kHandler = Symbol('handler');\nclass Request {\n  constructor(origin, {\n    path,\n    method,\n    body,\n    headers,\n    query,\n    idempotent,\n    blocking,\n    upgrade,\n    headersTimeout,\n    bodyTimeout,\n    reset,\n    throwOnError,\n    expectContinue,\n    servername\n  }, handler) {\n    if (typeof path !== 'string') {\n      throw new InvalidArgumentError('path must be a string');\n    } else if (path[0] !== '/' && !(path.startsWith('http://') || path.startsWith('https://')) && method !== 'CONNECT') {\n      throw new InvalidArgumentError('path must be an absolute URL or start with a slash');\n    } else if (invalidPathRegex.test(path)) {\n      throw new InvalidArgumentError('invalid request path');\n    }\n    if (typeof method !== 'string') {\n      throw new InvalidArgumentError('method must be a string');\n    } else if (normalizedMethodRecords[method] === undefined && !isValidHTTPToken(method)) {\n      throw new InvalidArgumentError('invalid request method');\n    }\n    if (upgrade && typeof upgrade !== 'string') {\n      throw new InvalidArgumentError('upgrade must be a string');\n    }\n    if (headersTimeout != null && (!Number.isFinite(headersTimeout) || headersTimeout < 0)) {\n      throw new InvalidArgumentError('invalid headersTimeout');\n    }\n    if (bodyTimeout != null && (!Number.isFinite(bodyTimeout) || bodyTimeout < 0)) {\n      throw new InvalidArgumentError('invalid bodyTimeout');\n    }\n    if (reset != null && typeof reset !== 'boolean') {\n      throw new InvalidArgumentError('invalid reset');\n    }\n    if (expectContinue != null && typeof expectContinue !== 'boolean') {\n      throw new InvalidArgumentError('invalid expectContinue');\n    }\n    this.headersTimeout = headersTimeout;\n    this.bodyTimeout = bodyTimeout;\n    this.throwOnError = throwOnError === true;\n    this.method = method;\n    this.abort = null;\n    if (body == null) {\n      this.body = null;\n    } else if (isStream(body)) {\n      this.body = body;\n      const rState = this.body._readableState;\n      if (!rState || !rState.autoDestroy) {\n        this.endHandler = function autoDestroy() {\n          destroy(this);\n        };\n        this.body.on('end', this.endHandler);\n      }\n      this.errorHandler = err => {\n        if (this.abort) {\n          this.abort(err);\n        } else {\n          this.error = err;\n        }\n      };\n      this.body.on('error', this.errorHandler);\n    } else if (isBuffer(body)) {\n      this.body = body.byteLength ? body : null;\n    } else if (ArrayBuffer.isView(body)) {\n      this.body = body.buffer.byteLength ? Buffer.from(body.buffer, body.byteOffset, body.byteLength) : null;\n    } else if (body instanceof ArrayBuffer) {\n      this.body = body.byteLength ? Buffer.from(body) : null;\n    } else if (typeof body === 'string') {\n      this.body = body.length ? Buffer.from(body) : null;\n    } else if (isFormDataLike(body) || isIterable(body) || isBlobLike(body)) {\n      this.body = body;\n    } else {\n      throw new InvalidArgumentError('body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable');\n    }\n    this.completed = false;\n    this.aborted = false;\n    this.upgrade = upgrade || null;\n    this.path = query ? buildURL(path, query) : path;\n    this.origin = origin;\n    this.idempotent = idempotent == null ? method === 'HEAD' || method === 'GET' : idempotent;\n    this.blocking = blocking == null ? false : blocking;\n    this.reset = reset == null ? null : reset;\n    this.host = null;\n    this.contentLength = null;\n    this.contentType = null;\n    this.headers = [];\n\n    // Only for H2\n    this.expectContinue = expectContinue != null ? expectContinue : false;\n    if (Array.isArray(headers)) {\n      if (headers.length % 2 !== 0) {\n        throw new InvalidArgumentError('headers array must be even');\n      }\n      for (let i = 0; i < headers.length; i += 2) {\n        processHeader(this, headers[i], headers[i + 1]);\n      }\n    } else if (headers && typeof headers === 'object') {\n      if (headers[Symbol.iterator]) {\n        for (const header of headers) {\n          if (!Array.isArray(header) || header.length !== 2) {\n            throw new InvalidArgumentError('headers must be in key-value pair format');\n          }\n          processHeader(this, header[0], header[1]);\n        }\n      } else {\n        const keys = Object.keys(headers);\n        for (let i = 0; i < keys.length; ++i) {\n          processHeader(this, keys[i], headers[keys[i]]);\n        }\n      }\n    } else if (headers != null) {\n      throw new InvalidArgumentError('headers must be an object or an array');\n    }\n    validateHandler(handler, method, upgrade);\n    this.servername = servername || getServerName(this.host);\n    this[kHandler] = handler;\n    if (channels.create.hasSubscribers) {\n      channels.create.publish({\n        request: this\n      });\n    }\n  }\n  onBodySent(chunk) {\n    if (this[kHandler].onBodySent) {\n      try {\n        return this[kHandler].onBodySent(chunk);\n      } catch (err) {\n        this.abort(err);\n      }\n    }\n  }\n  onRequestSent() {\n    if (channels.bodySent.hasSubscribers) {\n      channels.bodySent.publish({\n        request: this\n      });\n    }\n    if (this[kHandler].onRequestSent) {\n      try {\n        return this[kHandler].onRequestSent();\n      } catch (err) {\n        this.abort(err);\n      }\n    }\n  }\n  onConnect(abort) {\n    assert(!this.aborted);\n    assert(!this.completed);\n    if (this.error) {\n      abort(this.error);\n    } else {\n      this.abort = abort;\n      return this[kHandler].onConnect(abort);\n    }\n  }\n  onResponseStarted() {\n    return this[kHandler].onResponseStarted?.();\n  }\n  onHeaders(statusCode, headers, resume, statusText) {\n    assert(!this.aborted);\n    assert(!this.completed);\n    if (channels.headers.hasSubscribers) {\n      channels.headers.publish({\n        request: this,\n        response: {\n          statusCode,\n          headers,\n          statusText\n        }\n      });\n    }\n    try {\n      return this[kHandler].onHeaders(statusCode, headers, resume, statusText);\n    } catch (err) {\n      this.abort(err);\n    }\n  }\n  onData(chunk) {\n    assert(!this.aborted);\n    assert(!this.completed);\n    try {\n      return this[kHandler].onData(chunk);\n    } catch (err) {\n      this.abort(err);\n      return false;\n    }\n  }\n  onUpgrade(statusCode, headers, socket) {\n    assert(!this.aborted);\n    assert(!this.completed);\n    return this[kHandler].onUpgrade(statusCode, headers, socket);\n  }\n  onComplete(trailers) {\n    this.onFinally();\n    assert(!this.aborted);\n    this.completed = true;\n    if (channels.trailers.hasSubscribers) {\n      channels.trailers.publish({\n        request: this,\n        trailers\n      });\n    }\n    try {\n      return this[kHandler].onComplete(trailers);\n    } catch (err) {\n      // TODO (fix): This might be a bad idea?\n      this.onError(err);\n    }\n  }\n  onError(error) {\n    this.onFinally();\n    if (channels.error.hasSubscribers) {\n      channels.error.publish({\n        request: this,\n        error\n      });\n    }\n    if (this.aborted) {\n      return;\n    }\n    this.aborted = true;\n    return this[kHandler].onError(error);\n  }\n  onFinally() {\n    if (this.errorHandler) {\n      this.body.off('error', this.errorHandler);\n      this.errorHandler = null;\n    }\n    if (this.endHandler) {\n      this.body.off('end', this.endHandler);\n      this.endHandler = null;\n    }\n  }\n  addHeader(key, value) {\n    processHeader(this, key, value);\n    return this;\n  }\n}\nfunction processHeader(request, key, val) {\n  if (val && typeof val === 'object' && !Array.isArray(val)) {\n    throw new InvalidArgumentError(`invalid ${key} header`);\n  } else if (val === undefined) {\n    return;\n  }\n  let headerName = headerNameLowerCasedRecord[key];\n  if (headerName === undefined) {\n    headerName = key.toLowerCase();\n    if (headerNameLowerCasedRecord[headerName] === undefined && !isValidHTTPToken(headerName)) {\n      throw new InvalidArgumentError('invalid header key');\n    }\n  }\n  if (Array.isArray(val)) {\n    const arr = [];\n    for (let i = 0; i < val.length; i++) {\n      if (typeof val[i] === 'string') {\n        if (!isValidHeaderValue(val[i])) {\n          throw new InvalidArgumentError(`invalid ${key} header`);\n        }\n        arr.push(val[i]);\n      } else if (val[i] === null) {\n        arr.push('');\n      } else if (typeof val[i] === 'object') {\n        throw new InvalidArgumentError(`invalid ${key} header`);\n      } else {\n        arr.push(`${val[i]}`);\n      }\n    }\n    val = arr;\n  } else if (typeof val === 'string') {\n    if (!isValidHeaderValue(val)) {\n      throw new InvalidArgumentError(`invalid ${key} header`);\n    }\n  } else if (val === null) {\n    val = '';\n  } else {\n    val = `${val}`;\n  }\n  if (request.host === null && headerName === 'host') {\n    if (typeof val !== 'string') {\n      throw new InvalidArgumentError('invalid host header');\n    }\n    // Consumed by Client\n    request.host = val;\n  } else if (request.contentLength === null && headerName === 'content-length') {\n    request.contentLength = parseInt(val, 10);\n    if (!Number.isFinite(request.contentLength)) {\n      throw new InvalidArgumentError('invalid content-length header');\n    }\n  } else if (request.contentType === null && headerName === 'content-type') {\n    request.contentType = val;\n    request.headers.push(key, val);\n  } else if (headerName === 'transfer-encoding' || headerName === 'keep-alive' || headerName === 'upgrade') {\n    throw new InvalidArgumentError(`invalid ${headerName} header`);\n  } else if (headerName === 'connection') {\n    const value = typeof val === 'string' ? val.toLowerCase() : null;\n    if (value !== 'close' && value !== 'keep-alive') {\n      throw new InvalidArgumentError('invalid connection header');\n    }\n    if (value === 'close') {\n      request.reset = true;\n    }\n  } else if (headerName === 'expect') {\n    throw new NotSupportedError('expect header not supported');\n  } else {\n    request.headers.push(key, val);\n  }\n}\nmodule.exports = Request;","map":{"version":3,"names":["InvalidArgumentError","NotSupportedError","require","assert","isValidHTTPToken","isValidHeaderValue","isStream","destroy","isBuffer","isFormDataLike","isIterable","isBlobLike","buildURL","validateHandler","getServerName","normalizedMethodRecords","channels","headerNameLowerCasedRecord","invalidPathRegex","kHandler","Symbol","Request","constructor","origin","path","method","body","headers","query","idempotent","blocking","upgrade","headersTimeout","bodyTimeout","reset","throwOnError","expectContinue","servername","handler","startsWith","test","undefined","Number","isFinite","abort","rState","_readableState","autoDestroy","endHandler","on","errorHandler","err","error","byteLength","ArrayBuffer","isView","buffer","Buffer","from","byteOffset","length","completed","aborted","host","contentLength","contentType","Array","isArray","i","processHeader","iterator","header","keys","Object","create","hasSubscribers","publish","request","onBodySent","chunk","onRequestSent","bodySent","onConnect","onResponseStarted","onHeaders","statusCode","resume","statusText","response","onData","onUpgrade","socket","onComplete","trailers","onFinally","onError","off","addHeader","key","value","val","headerName","toLowerCase","arr","push","parseInt","module","exports"],"sources":["/Users/nataliia/PussyProjects/react-app/node_modules/undici/lib/core/request.js"],"sourcesContent":["'use strict'\n\nconst {\n  InvalidArgumentError,\n  NotSupportedError\n} = require('./errors')\nconst assert = require('node:assert')\nconst {\n  isValidHTTPToken,\n  isValidHeaderValue,\n  isStream,\n  destroy,\n  isBuffer,\n  isFormDataLike,\n  isIterable,\n  isBlobLike,\n  buildURL,\n  validateHandler,\n  getServerName,\n  normalizedMethodRecords\n} = require('./util')\nconst { channels } = require('./diagnostics.js')\nconst { headerNameLowerCasedRecord } = require('./constants')\n\n// Verifies that a given path is valid does not contain control chars \\x00 to \\x20\nconst invalidPathRegex = /[^\\u0021-\\u00ff]/\n\nconst kHandler = Symbol('handler')\n\nclass Request {\n  constructor (origin, {\n    path,\n    method,\n    body,\n    headers,\n    query,\n    idempotent,\n    blocking,\n    upgrade,\n    headersTimeout,\n    bodyTimeout,\n    reset,\n    throwOnError,\n    expectContinue,\n    servername\n  }, handler) {\n    if (typeof path !== 'string') {\n      throw new InvalidArgumentError('path must be a string')\n    } else if (\n      path[0] !== '/' &&\n      !(path.startsWith('http://') || path.startsWith('https://')) &&\n      method !== 'CONNECT'\n    ) {\n      throw new InvalidArgumentError('path must be an absolute URL or start with a slash')\n    } else if (invalidPathRegex.test(path)) {\n      throw new InvalidArgumentError('invalid request path')\n    }\n\n    if (typeof method !== 'string') {\n      throw new InvalidArgumentError('method must be a string')\n    } else if (normalizedMethodRecords[method] === undefined && !isValidHTTPToken(method)) {\n      throw new InvalidArgumentError('invalid request method')\n    }\n\n    if (upgrade && typeof upgrade !== 'string') {\n      throw new InvalidArgumentError('upgrade must be a string')\n    }\n\n    if (headersTimeout != null && (!Number.isFinite(headersTimeout) || headersTimeout < 0)) {\n      throw new InvalidArgumentError('invalid headersTimeout')\n    }\n\n    if (bodyTimeout != null && (!Number.isFinite(bodyTimeout) || bodyTimeout < 0)) {\n      throw new InvalidArgumentError('invalid bodyTimeout')\n    }\n\n    if (reset != null && typeof reset !== 'boolean') {\n      throw new InvalidArgumentError('invalid reset')\n    }\n\n    if (expectContinue != null && typeof expectContinue !== 'boolean') {\n      throw new InvalidArgumentError('invalid expectContinue')\n    }\n\n    this.headersTimeout = headersTimeout\n\n    this.bodyTimeout = bodyTimeout\n\n    this.throwOnError = throwOnError === true\n\n    this.method = method\n\n    this.abort = null\n\n    if (body == null) {\n      this.body = null\n    } else if (isStream(body)) {\n      this.body = body\n\n      const rState = this.body._readableState\n      if (!rState || !rState.autoDestroy) {\n        this.endHandler = function autoDestroy () {\n          destroy(this)\n        }\n        this.body.on('end', this.endHandler)\n      }\n\n      this.errorHandler = err => {\n        if (this.abort) {\n          this.abort(err)\n        } else {\n          this.error = err\n        }\n      }\n      this.body.on('error', this.errorHandler)\n    } else if (isBuffer(body)) {\n      this.body = body.byteLength ? body : null\n    } else if (ArrayBuffer.isView(body)) {\n      this.body = body.buffer.byteLength ? Buffer.from(body.buffer, body.byteOffset, body.byteLength) : null\n    } else if (body instanceof ArrayBuffer) {\n      this.body = body.byteLength ? Buffer.from(body) : null\n    } else if (typeof body === 'string') {\n      this.body = body.length ? Buffer.from(body) : null\n    } else if (isFormDataLike(body) || isIterable(body) || isBlobLike(body)) {\n      this.body = body\n    } else {\n      throw new InvalidArgumentError('body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable')\n    }\n\n    this.completed = false\n\n    this.aborted = false\n\n    this.upgrade = upgrade || null\n\n    this.path = query ? buildURL(path, query) : path\n\n    this.origin = origin\n\n    this.idempotent = idempotent == null\n      ? method === 'HEAD' || method === 'GET'\n      : idempotent\n\n    this.blocking = blocking == null ? false : blocking\n\n    this.reset = reset == null ? null : reset\n\n    this.host = null\n\n    this.contentLength = null\n\n    this.contentType = null\n\n    this.headers = []\n\n    // Only for H2\n    this.expectContinue = expectContinue != null ? expectContinue : false\n\n    if (Array.isArray(headers)) {\n      if (headers.length % 2 !== 0) {\n        throw new InvalidArgumentError('headers array must be even')\n      }\n      for (let i = 0; i < headers.length; i += 2) {\n        processHeader(this, headers[i], headers[i + 1])\n      }\n    } else if (headers && typeof headers === 'object') {\n      if (headers[Symbol.iterator]) {\n        for (const header of headers) {\n          if (!Array.isArray(header) || header.length !== 2) {\n            throw new InvalidArgumentError('headers must be in key-value pair format')\n          }\n          processHeader(this, header[0], header[1])\n        }\n      } else {\n        const keys = Object.keys(headers)\n        for (let i = 0; i < keys.length; ++i) {\n          processHeader(this, keys[i], headers[keys[i]])\n        }\n      }\n    } else if (headers != null) {\n      throw new InvalidArgumentError('headers must be an object or an array')\n    }\n\n    validateHandler(handler, method, upgrade)\n\n    this.servername = servername || getServerName(this.host)\n\n    this[kHandler] = handler\n\n    if (channels.create.hasSubscribers) {\n      channels.create.publish({ request: this })\n    }\n  }\n\n  onBodySent (chunk) {\n    if (this[kHandler].onBodySent) {\n      try {\n        return this[kHandler].onBodySent(chunk)\n      } catch (err) {\n        this.abort(err)\n      }\n    }\n  }\n\n  onRequestSent () {\n    if (channels.bodySent.hasSubscribers) {\n      channels.bodySent.publish({ request: this })\n    }\n\n    if (this[kHandler].onRequestSent) {\n      try {\n        return this[kHandler].onRequestSent()\n      } catch (err) {\n        this.abort(err)\n      }\n    }\n  }\n\n  onConnect (abort) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    if (this.error) {\n      abort(this.error)\n    } else {\n      this.abort = abort\n      return this[kHandler].onConnect(abort)\n    }\n  }\n\n  onResponseStarted () {\n    return this[kHandler].onResponseStarted?.()\n  }\n\n  onHeaders (statusCode, headers, resume, statusText) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    if (channels.headers.hasSubscribers) {\n      channels.headers.publish({ request: this, response: { statusCode, headers, statusText } })\n    }\n\n    try {\n      return this[kHandler].onHeaders(statusCode, headers, resume, statusText)\n    } catch (err) {\n      this.abort(err)\n    }\n  }\n\n  onData (chunk) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    try {\n      return this[kHandler].onData(chunk)\n    } catch (err) {\n      this.abort(err)\n      return false\n    }\n  }\n\n  onUpgrade (statusCode, headers, socket) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    return this[kHandler].onUpgrade(statusCode, headers, socket)\n  }\n\n  onComplete (trailers) {\n    this.onFinally()\n\n    assert(!this.aborted)\n\n    this.completed = true\n    if (channels.trailers.hasSubscribers) {\n      channels.trailers.publish({ request: this, trailers })\n    }\n\n    try {\n      return this[kHandler].onComplete(trailers)\n    } catch (err) {\n      // TODO (fix): This might be a bad idea?\n      this.onError(err)\n    }\n  }\n\n  onError (error) {\n    this.onFinally()\n\n    if (channels.error.hasSubscribers) {\n      channels.error.publish({ request: this, error })\n    }\n\n    if (this.aborted) {\n      return\n    }\n    this.aborted = true\n\n    return this[kHandler].onError(error)\n  }\n\n  onFinally () {\n    if (this.errorHandler) {\n      this.body.off('error', this.errorHandler)\n      this.errorHandler = null\n    }\n\n    if (this.endHandler) {\n      this.body.off('end', this.endHandler)\n      this.endHandler = null\n    }\n  }\n\n  addHeader (key, value) {\n    processHeader(this, key, value)\n    return this\n  }\n}\n\nfunction processHeader (request, key, val) {\n  if (val && (typeof val === 'object' && !Array.isArray(val))) {\n    throw new InvalidArgumentError(`invalid ${key} header`)\n  } else if (val === undefined) {\n    return\n  }\n\n  let headerName = headerNameLowerCasedRecord[key]\n\n  if (headerName === undefined) {\n    headerName = key.toLowerCase()\n    if (headerNameLowerCasedRecord[headerName] === undefined && !isValidHTTPToken(headerName)) {\n      throw new InvalidArgumentError('invalid header key')\n    }\n  }\n\n  if (Array.isArray(val)) {\n    const arr = []\n    for (let i = 0; i < val.length; i++) {\n      if (typeof val[i] === 'string') {\n        if (!isValidHeaderValue(val[i])) {\n          throw new InvalidArgumentError(`invalid ${key} header`)\n        }\n        arr.push(val[i])\n      } else if (val[i] === null) {\n        arr.push('')\n      } else if (typeof val[i] === 'object') {\n        throw new InvalidArgumentError(`invalid ${key} header`)\n      } else {\n        arr.push(`${val[i]}`)\n      }\n    }\n    val = arr\n  } else if (typeof val === 'string') {\n    if (!isValidHeaderValue(val)) {\n      throw new InvalidArgumentError(`invalid ${key} header`)\n    }\n  } else if (val === null) {\n    val = ''\n  } else {\n    val = `${val}`\n  }\n\n  if (request.host === null && headerName === 'host') {\n    if (typeof val !== 'string') {\n      throw new InvalidArgumentError('invalid host header')\n    }\n    // Consumed by Client\n    request.host = val\n  } else if (request.contentLength === null && headerName === 'content-length') {\n    request.contentLength = parseInt(val, 10)\n    if (!Number.isFinite(request.contentLength)) {\n      throw new InvalidArgumentError('invalid content-length header')\n    }\n  } else if (request.contentType === null && headerName === 'content-type') {\n    request.contentType = val\n    request.headers.push(key, val)\n  } else if (headerName === 'transfer-encoding' || headerName === 'keep-alive' || headerName === 'upgrade') {\n    throw new InvalidArgumentError(`invalid ${headerName} header`)\n  } else if (headerName === 'connection') {\n    const value = typeof val === 'string' ? val.toLowerCase() : null\n    if (value !== 'close' && value !== 'keep-alive') {\n      throw new InvalidArgumentError('invalid connection header')\n    }\n\n    if (value === 'close') {\n      request.reset = true\n    }\n  } else if (headerName === 'expect') {\n    throw new NotSupportedError('expect header not supported')\n  } else {\n    request.headers.push(key, val)\n  }\n}\n\nmodule.exports = Request\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}