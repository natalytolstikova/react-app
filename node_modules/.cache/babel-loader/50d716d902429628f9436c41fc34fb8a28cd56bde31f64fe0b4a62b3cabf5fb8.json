{"ast":null,"code":"'use strict';\n\nconst {\n  Blob,\n  File\n} = require('node:buffer');\nconst {\n  kState\n} = require('./symbols');\nconst {\n  webidl\n} = require('./webidl');\n\n// TODO(@KhafraDev): remove\nclass FileLike {\n  constructor(blobLike, fileName, options = {}) {\n    // TODO: argument idl type check\n\n    // The File constructor is invoked with two or three parameters, depending\n    // on whether the optional dictionary parameter is used. When the File()\n    // constructor is invoked, user agents must run the following steps:\n\n    // 1. Let bytes be the result of processing blob parts given fileBits and\n    // options.\n\n    // 2. Let n be the fileName argument to the constructor.\n    const n = fileName;\n\n    // 3. Process FilePropertyBag dictionary argument by running the following\n    // substeps:\n\n    //    1. If the type member is provided and is not the empty string, let t\n    //    be set to the type dictionary member. If t contains any characters\n    //    outside the range U+0020 to U+007E, then set t to the empty string\n    //    and return from these substeps.\n    //    TODO\n    const t = options.type;\n\n    //    2. Convert every character in t to ASCII lowercase.\n    //    TODO\n\n    //    3. If the lastModified member is provided, let d be set to the\n    //    lastModified dictionary member. If it is not provided, set d to the\n    //    current date and time represented as the number of milliseconds since\n    //    the Unix Epoch (which is the equivalent of Date.now() [ECMA-262]).\n    const d = options.lastModified ?? Date.now();\n\n    // 4. Return a new File object F such that:\n    // F refers to the bytes byte sequence.\n    // F.size is set to the number of total bytes in bytes.\n    // F.name is set to n.\n    // F.type is set to t.\n    // F.lastModified is set to d.\n\n    this[kState] = {\n      blobLike,\n      name: n,\n      type: t,\n      lastModified: d\n    };\n  }\n  stream(...args) {\n    webidl.brandCheck(this, FileLike);\n    return this[kState].blobLike.stream(...args);\n  }\n  arrayBuffer(...args) {\n    webidl.brandCheck(this, FileLike);\n    return this[kState].blobLike.arrayBuffer(...args);\n  }\n  slice(...args) {\n    webidl.brandCheck(this, FileLike);\n    return this[kState].blobLike.slice(...args);\n  }\n  text(...args) {\n    webidl.brandCheck(this, FileLike);\n    return this[kState].blobLike.text(...args);\n  }\n  get size() {\n    webidl.brandCheck(this, FileLike);\n    return this[kState].blobLike.size;\n  }\n  get type() {\n    webidl.brandCheck(this, FileLike);\n    return this[kState].blobLike.type;\n  }\n  get name() {\n    webidl.brandCheck(this, FileLike);\n    return this[kState].name;\n  }\n  get lastModified() {\n    webidl.brandCheck(this, FileLike);\n    return this[kState].lastModified;\n  }\n  get [Symbol.toStringTag]() {\n    return 'File';\n  }\n}\nwebidl.converters.Blob = webidl.interfaceConverter(Blob);\n\n// If this function is moved to ./util.js, some tools (such as\n// rollup) will warn about circular dependencies. See:\n// https://github.com/nodejs/undici/issues/1629\nfunction isFileLike(object) {\n  return object instanceof File || object && (typeof object.stream === 'function' || typeof object.arrayBuffer === 'function') && object[Symbol.toStringTag] === 'File';\n}\nmodule.exports = {\n  FileLike,\n  isFileLike\n};","map":{"version":3,"names":["Blob","File","require","kState","webidl","FileLike","constructor","blobLike","fileName","options","n","t","type","d","lastModified","Date","now","name","stream","args","brandCheck","arrayBuffer","slice","text","size","Symbol","toStringTag","converters","interfaceConverter","isFileLike","object","module","exports"],"sources":["/Users/nataliia/PussyProjects/react-app/node_modules/undici/lib/web/fetch/file.js"],"sourcesContent":["'use strict'\n\nconst { Blob, File } = require('node:buffer')\nconst { kState } = require('./symbols')\nconst { webidl } = require('./webidl')\n\n// TODO(@KhafraDev): remove\nclass FileLike {\n  constructor (blobLike, fileName, options = {}) {\n    // TODO: argument idl type check\n\n    // The File constructor is invoked with two or three parameters, depending\n    // on whether the optional dictionary parameter is used. When the File()\n    // constructor is invoked, user agents must run the following steps:\n\n    // 1. Let bytes be the result of processing blob parts given fileBits and\n    // options.\n\n    // 2. Let n be the fileName argument to the constructor.\n    const n = fileName\n\n    // 3. Process FilePropertyBag dictionary argument by running the following\n    // substeps:\n\n    //    1. If the type member is provided and is not the empty string, let t\n    //    be set to the type dictionary member. If t contains any characters\n    //    outside the range U+0020 to U+007E, then set t to the empty string\n    //    and return from these substeps.\n    //    TODO\n    const t = options.type\n\n    //    2. Convert every character in t to ASCII lowercase.\n    //    TODO\n\n    //    3. If the lastModified member is provided, let d be set to the\n    //    lastModified dictionary member. If it is not provided, set d to the\n    //    current date and time represented as the number of milliseconds since\n    //    the Unix Epoch (which is the equivalent of Date.now() [ECMA-262]).\n    const d = options.lastModified ?? Date.now()\n\n    // 4. Return a new File object F such that:\n    // F refers to the bytes byte sequence.\n    // F.size is set to the number of total bytes in bytes.\n    // F.name is set to n.\n    // F.type is set to t.\n    // F.lastModified is set to d.\n\n    this[kState] = {\n      blobLike,\n      name: n,\n      type: t,\n      lastModified: d\n    }\n  }\n\n  stream (...args) {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.stream(...args)\n  }\n\n  arrayBuffer (...args) {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.arrayBuffer(...args)\n  }\n\n  slice (...args) {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.slice(...args)\n  }\n\n  text (...args) {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.text(...args)\n  }\n\n  get size () {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.size\n  }\n\n  get type () {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.type\n  }\n\n  get name () {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].name\n  }\n\n  get lastModified () {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n}\n\nwebidl.converters.Blob = webidl.interfaceConverter(Blob)\n\n// If this function is moved to ./util.js, some tools (such as\n// rollup) will warn about circular dependencies. See:\n// https://github.com/nodejs/undici/issues/1629\nfunction isFileLike (object) {\n  return (\n    (object instanceof File) ||\n    (\n      object &&\n      (typeof object.stream === 'function' ||\n      typeof object.arrayBuffer === 'function') &&\n      object[Symbol.toStringTag] === 'File'\n    )\n  )\n}\n\nmodule.exports = { FileLike, isFileLike }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}