{"ast":null,"code":"'use strict';\n\nconst assert = require('node:assert');\nconst {\n  AsyncResource\n} = require('node:async_hooks');\nconst {\n  InvalidArgumentError,\n  SocketError\n} = require('../core/errors');\nconst util = require('../core/util');\nconst {\n  addSignal,\n  removeSignal\n} = require('./abort-signal');\nclass ConnectHandler extends AsyncResource {\n  constructor(opts, callback) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts');\n    }\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback');\n    }\n    const {\n      signal,\n      opaque,\n      responseHeaders\n    } = opts;\n    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget');\n    }\n    super('UNDICI_CONNECT');\n    this.opaque = opaque || null;\n    this.responseHeaders = responseHeaders || null;\n    this.callback = callback;\n    this.abort = null;\n    addSignal(this, signal);\n  }\n  onConnect(abort, context) {\n    if (this.reason) {\n      abort(this.reason);\n      return;\n    }\n    assert(this.callback);\n    this.abort = abort;\n    this.context = context;\n  }\n  onHeaders() {\n    throw new SocketError('bad connect', null);\n  }\n  onUpgrade(statusCode, rawHeaders, socket) {\n    const {\n      callback,\n      opaque,\n      context\n    } = this;\n    removeSignal(this);\n    this.callback = null;\n    let headers = rawHeaders;\n    // Indicates is an HTTP2Session\n    if (headers != null) {\n      headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders);\n    }\n    this.runInAsyncScope(callback, null, null, {\n      statusCode,\n      headers,\n      socket,\n      opaque,\n      context\n    });\n  }\n  onError(err) {\n    const {\n      callback,\n      opaque\n    } = this;\n    removeSignal(this);\n    if (callback) {\n      this.callback = null;\n      queueMicrotask(() => {\n        this.runInAsyncScope(callback, null, err, {\n          opaque\n        });\n      });\n    }\n  }\n}\nfunction connect(opts, callback) {\n  if (callback === undefined) {\n    return new Promise((resolve, reject) => {\n      connect.call(this, opts, (err, data) => {\n        return err ? reject(err) : resolve(data);\n      });\n    });\n  }\n  try {\n    const connectHandler = new ConnectHandler(opts, callback);\n    this.dispatch({\n      ...opts,\n      method: 'CONNECT'\n    }, connectHandler);\n  } catch (err) {\n    if (typeof callback !== 'function') {\n      throw err;\n    }\n    const opaque = opts?.opaque;\n    queueMicrotask(() => callback(err, {\n      opaque\n    }));\n  }\n}\nmodule.exports = connect;","map":{"version":3,"names":["assert","require","AsyncResource","InvalidArgumentError","SocketError","util","addSignal","removeSignal","ConnectHandler","constructor","opts","callback","signal","opaque","responseHeaders","on","addEventListener","abort","onConnect","context","reason","onHeaders","onUpgrade","statusCode","rawHeaders","socket","headers","parseRawHeaders","parseHeaders","runInAsyncScope","onError","err","queueMicrotask","connect","undefined","Promise","resolve","reject","call","data","connectHandler","dispatch","method","module","exports"],"sources":["/Users/nataliia/PussyProjects/react-app/node_modules/undici/lib/api/api-connect.js"],"sourcesContent":["'use strict'\n\nconst assert = require('node:assert')\nconst { AsyncResource } = require('node:async_hooks')\nconst { InvalidArgumentError, SocketError } = require('../core/errors')\nconst util = require('../core/util')\nconst { addSignal, removeSignal } = require('./abort-signal')\n\nclass ConnectHandler extends AsyncResource {\n  constructor (opts, callback) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    const { signal, opaque, responseHeaders } = opts\n\n    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')\n    }\n\n    super('UNDICI_CONNECT')\n\n    this.opaque = opaque || null\n    this.responseHeaders = responseHeaders || null\n    this.callback = callback\n    this.abort = null\n\n    addSignal(this, signal)\n  }\n\n  onConnect (abort, context) {\n    if (this.reason) {\n      abort(this.reason)\n      return\n    }\n\n    assert(this.callback)\n\n    this.abort = abort\n    this.context = context\n  }\n\n  onHeaders () {\n    throw new SocketError('bad connect', null)\n  }\n\n  onUpgrade (statusCode, rawHeaders, socket) {\n    const { callback, opaque, context } = this\n\n    removeSignal(this)\n\n    this.callback = null\n\n    let headers = rawHeaders\n    // Indicates is an HTTP2Session\n    if (headers != null) {\n      headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n    }\n\n    this.runInAsyncScope(callback, null, null, {\n      statusCode,\n      headers,\n      socket,\n      opaque,\n      context\n    })\n  }\n\n  onError (err) {\n    const { callback, opaque } = this\n\n    removeSignal(this)\n\n    if (callback) {\n      this.callback = null\n      queueMicrotask(() => {\n        this.runInAsyncScope(callback, null, err, { opaque })\n      })\n    }\n  }\n}\n\nfunction connect (opts, callback) {\n  if (callback === undefined) {\n    return new Promise((resolve, reject) => {\n      connect.call(this, opts, (err, data) => {\n        return err ? reject(err) : resolve(data)\n      })\n    })\n  }\n\n  try {\n    const connectHandler = new ConnectHandler(opts, callback)\n    this.dispatch({ ...opts, method: 'CONNECT' }, connectHandler)\n  } catch (err) {\n    if (typeof callback !== 'function') {\n      throw err\n    }\n    const opaque = opts?.opaque\n    queueMicrotask(() => callback(err, { opaque }))\n  }\n}\n\nmodule.exports = connect\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}