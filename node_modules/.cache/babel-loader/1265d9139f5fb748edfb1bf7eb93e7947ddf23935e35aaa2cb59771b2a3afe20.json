{"ast":null,"code":"'use strict';\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction isCTLExcludingHtab(value) {\n  for (let i = 0; i < value.length; ++i) {\n    const code = value.charCodeAt(i);\n    if (code >= 0x00 && code <= 0x08 || code >= 0x0A && code <= 0x1F || code === 0x7F) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n CHAR           = <any US-ASCII character (octets 0 - 127)>\n token          = 1*<any CHAR except CTLs or separators>\n separators     = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n                | \",\" | \";\" | \":\" | \"\\\" | <\">\n                | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n                | \"{\" | \"}\" | SP | HT\n * @param {string} name\n */\nfunction validateCookieName(name) {\n  for (let i = 0; i < name.length; ++i) {\n    const code = name.charCodeAt(i);\n    if (code < 0x21 ||\n    // exclude CTLs (0-31), SP and HT\n    code > 0x7E ||\n    // exclude non-ascii and DEL\n    code === 0x22 ||\n    // \"\n    code === 0x28 ||\n    // (\n    code === 0x29 ||\n    // )\n    code === 0x3C ||\n    // <\n    code === 0x3E ||\n    // >\n    code === 0x40 ||\n    // @\n    code === 0x2C ||\n    // ,\n    code === 0x3B ||\n    // ;\n    code === 0x3A ||\n    // :\n    code === 0x5C ||\n    // \\\n    code === 0x2F ||\n    // /\n    code === 0x5B ||\n    // [\n    code === 0x5D ||\n    // ]\n    code === 0x3F ||\n    // ?\n    code === 0x3D ||\n    // =\n    code === 0x7B ||\n    // {\n    code === 0x7D // }\n    ) {\n      throw new Error('Invalid cookie name');\n    }\n  }\n}\n\n/**\n cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n                       ; US-ASCII characters excluding CTLs,\n                       ; whitespace DQUOTE, comma, semicolon,\n                       ; and backslash\n * @param {string} value\n */\nfunction validateCookieValue(value) {\n  let len = value.length;\n  let i = 0;\n\n  // if the value is wrapped in DQUOTE\n  if (value[0] === '\"') {\n    if (len === 1 || value[len - 1] !== '\"') {\n      throw new Error('Invalid cookie value');\n    }\n    --len;\n    ++i;\n  }\n  while (i < len) {\n    const code = value.charCodeAt(i++);\n    if (code < 0x21 ||\n    // exclude CTLs (0-31)\n    code > 0x7E ||\n    // non-ascii and DEL (127)\n    code === 0x22 ||\n    // \"\n    code === 0x2C ||\n    // ,\n    code === 0x3B ||\n    // ;\n    code === 0x5C // \\\n    ) {\n      throw new Error('Invalid cookie value');\n    }\n  }\n}\n\n/**\n * path-value        = <any CHAR except CTLs or \";\">\n * @param {string} path\n */\nfunction validateCookiePath(path) {\n  for (let i = 0; i < path.length; ++i) {\n    const code = path.charCodeAt(i);\n    if (code < 0x20 ||\n    // exclude CTLs (0-31)\n    code === 0x7F ||\n    // DEL\n    code === 0x3B // ;\n    ) {\n      throw new Error('Invalid cookie path');\n    }\n  }\n}\n\n/**\n * I have no idea why these values aren't allowed to be honest,\n * but Deno tests these. - Khafra\n * @param {string} domain\n */\nfunction validateCookieDomain(domain) {\n  if (domain.startsWith('-') || domain.endsWith('.') || domain.endsWith('-')) {\n    throw new Error('Invalid cookie domain');\n  }\n}\nconst IMFDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst IMFMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst IMFPaddedNumbers = Array(61).fill(0).map((_, i) => i.toString().padStart(2, '0'));\n\n/**\n * @see https://www.rfc-editor.org/rfc/rfc7231#section-7.1.1.1\n * @param {number|Date} date\n  IMF-fixdate  = day-name \",\" SP date1 SP time-of-day SP GMT\n  ; fixed length/zone/capitalization subset of the format\n  ; see Section 3.3 of [RFC5322]\n\n  day-name     = %x4D.6F.6E ; \"Mon\", case-sensitive\n              / %x54.75.65 ; \"Tue\", case-sensitive\n              / %x57.65.64 ; \"Wed\", case-sensitive\n              / %x54.68.75 ; \"Thu\", case-sensitive\n              / %x46.72.69 ; \"Fri\", case-sensitive\n              / %x53.61.74 ; \"Sat\", case-sensitive\n              / %x53.75.6E ; \"Sun\", case-sensitive\n  date1        = day SP month SP year\n                  ; e.g., 02 Jun 1982\n\n  day          = 2DIGIT\n  month        = %x4A.61.6E ; \"Jan\", case-sensitive\n              / %x46.65.62 ; \"Feb\", case-sensitive\n              / %x4D.61.72 ; \"Mar\", case-sensitive\n              / %x41.70.72 ; \"Apr\", case-sensitive\n              / %x4D.61.79 ; \"May\", case-sensitive\n              / %x4A.75.6E ; \"Jun\", case-sensitive\n              / %x4A.75.6C ; \"Jul\", case-sensitive\n              / %x41.75.67 ; \"Aug\", case-sensitive\n              / %x53.65.70 ; \"Sep\", case-sensitive\n              / %x4F.63.74 ; \"Oct\", case-sensitive\n              / %x4E.6F.76 ; \"Nov\", case-sensitive\n              / %x44.65.63 ; \"Dec\", case-sensitive\n  year         = 4DIGIT\n\n  GMT          = %x47.4D.54 ; \"GMT\", case-sensitive\n\n  time-of-day  = hour \":\" minute \":\" second\n              ; 00:00:00 - 23:59:60 (leap second)\n\n  hour         = 2DIGIT\n  minute       = 2DIGIT\n  second       = 2DIGIT\n */\nfunction toIMFDate(date) {\n  if (typeof date === 'number') {\n    date = new Date(date);\n  }\n  return `${IMFDays[date.getUTCDay()]}, ${IMFPaddedNumbers[date.getUTCDate()]} ${IMFMonths[date.getUTCMonth()]} ${date.getUTCFullYear()} ${IMFPaddedNumbers[date.getUTCHours()]}:${IMFPaddedNumbers[date.getUTCMinutes()]}:${IMFPaddedNumbers[date.getUTCSeconds()]} GMT`;\n}\n\n/**\n max-age-av        = \"Max-Age=\" non-zero-digit *DIGIT\n                       ; In practice, both expires-av and max-age-av\n                       ; are limited to dates representable by the\n                       ; user agent.\n * @param {number} maxAge\n */\nfunction validateCookieMaxAge(maxAge) {\n  if (maxAge < 0) {\n    throw new Error('Invalid cookie max-age');\n  }\n}\n\n/**\n * @see https://www.rfc-editor.org/rfc/rfc6265#section-4.1.1\n * @param {import('./index').Cookie} cookie\n */\nfunction stringify(cookie) {\n  if (cookie.name.length === 0) {\n    return null;\n  }\n  validateCookieName(cookie.name);\n  validateCookieValue(cookie.value);\n  const out = [`${cookie.name}=${cookie.value}`];\n\n  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-cookie-prefixes-00#section-3.1\n  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-cookie-prefixes-00#section-3.2\n  if (cookie.name.startsWith('__Secure-')) {\n    cookie.secure = true;\n  }\n  if (cookie.name.startsWith('__Host-')) {\n    cookie.secure = true;\n    cookie.domain = null;\n    cookie.path = '/';\n  }\n  if (cookie.secure) {\n    out.push('Secure');\n  }\n  if (cookie.httpOnly) {\n    out.push('HttpOnly');\n  }\n  if (typeof cookie.maxAge === 'number') {\n    validateCookieMaxAge(cookie.maxAge);\n    out.push(`Max-Age=${cookie.maxAge}`);\n  }\n  if (cookie.domain) {\n    validateCookieDomain(cookie.domain);\n    out.push(`Domain=${cookie.domain}`);\n  }\n  if (cookie.path) {\n    validateCookiePath(cookie.path);\n    out.push(`Path=${cookie.path}`);\n  }\n  if (cookie.expires && cookie.expires.toString() !== 'Invalid Date') {\n    out.push(`Expires=${toIMFDate(cookie.expires)}`);\n  }\n  if (cookie.sameSite) {\n    out.push(`SameSite=${cookie.sameSite}`);\n  }\n  for (const part of cookie.unparsed) {\n    if (!part.includes('=')) {\n      throw new Error('Invalid unparsed');\n    }\n    const [key, ...value] = part.split('=');\n    out.push(`${key.trim()}=${value.join('=')}`);\n  }\n  return out.join('; ');\n}\nmodule.exports = {\n  isCTLExcludingHtab,\n  validateCookieName,\n  validateCookiePath,\n  validateCookieValue,\n  toIMFDate,\n  stringify\n};","map":{"version":3,"names":["isCTLExcludingHtab","value","i","length","code","charCodeAt","validateCookieName","name","Error","validateCookieValue","len","validateCookiePath","path","validateCookieDomain","domain","startsWith","endsWith","IMFDays","IMFMonths","IMFPaddedNumbers","Array","fill","map","_","toString","padStart","toIMFDate","date","Date","getUTCDay","getUTCDate","getUTCMonth","getUTCFullYear","getUTCHours","getUTCMinutes","getUTCSeconds","validateCookieMaxAge","maxAge","stringify","cookie","out","secure","push","httpOnly","expires","sameSite","part","unparsed","includes","key","split","trim","join","module","exports"],"sources":["/Users/nataliia/PussyProjects/react-app/node_modules/undici/lib/web/cookies/util.js"],"sourcesContent":["'use strict'\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction isCTLExcludingHtab (value) {\n  for (let i = 0; i < value.length; ++i) {\n    const code = value.charCodeAt(i)\n\n    if (\n      (code >= 0x00 && code <= 0x08) ||\n      (code >= 0x0A && code <= 0x1F) ||\n      code === 0x7F\n    ) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n CHAR           = <any US-ASCII character (octets 0 - 127)>\n token          = 1*<any CHAR except CTLs or separators>\n separators     = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n                | \",\" | \";\" | \":\" | \"\\\" | <\">\n                | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n                | \"{\" | \"}\" | SP | HT\n * @param {string} name\n */\nfunction validateCookieName (name) {\n  for (let i = 0; i < name.length; ++i) {\n    const code = name.charCodeAt(i)\n\n    if (\n      code < 0x21 || // exclude CTLs (0-31), SP and HT\n      code > 0x7E || // exclude non-ascii and DEL\n      code === 0x22 || // \"\n      code === 0x28 || // (\n      code === 0x29 || // )\n      code === 0x3C || // <\n      code === 0x3E || // >\n      code === 0x40 || // @\n      code === 0x2C || // ,\n      code === 0x3B || // ;\n      code === 0x3A || // :\n      code === 0x5C || // \\\n      code === 0x2F || // /\n      code === 0x5B || // [\n      code === 0x5D || // ]\n      code === 0x3F || // ?\n      code === 0x3D || // =\n      code === 0x7B || // {\n      code === 0x7D // }\n    ) {\n      throw new Error('Invalid cookie name')\n    }\n  }\n}\n\n/**\n cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n                       ; US-ASCII characters excluding CTLs,\n                       ; whitespace DQUOTE, comma, semicolon,\n                       ; and backslash\n * @param {string} value\n */\nfunction validateCookieValue (value) {\n  let len = value.length\n  let i = 0\n\n  // if the value is wrapped in DQUOTE\n  if (value[0] === '\"') {\n    if (len === 1 || value[len - 1] !== '\"') {\n      throw new Error('Invalid cookie value')\n    }\n    --len\n    ++i\n  }\n\n  while (i < len) {\n    const code = value.charCodeAt(i++)\n\n    if (\n      code < 0x21 || // exclude CTLs (0-31)\n      code > 0x7E || // non-ascii and DEL (127)\n      code === 0x22 || // \"\n      code === 0x2C || // ,\n      code === 0x3B || // ;\n      code === 0x5C // \\\n    ) {\n      throw new Error('Invalid cookie value')\n    }\n  }\n}\n\n/**\n * path-value        = <any CHAR except CTLs or \";\">\n * @param {string} path\n */\nfunction validateCookiePath (path) {\n  for (let i = 0; i < path.length; ++i) {\n    const code = path.charCodeAt(i)\n\n    if (\n      code < 0x20 || // exclude CTLs (0-31)\n      code === 0x7F || // DEL\n      code === 0x3B // ;\n    ) {\n      throw new Error('Invalid cookie path')\n    }\n  }\n}\n\n/**\n * I have no idea why these values aren't allowed to be honest,\n * but Deno tests these. - Khafra\n * @param {string} domain\n */\nfunction validateCookieDomain (domain) {\n  if (\n    domain.startsWith('-') ||\n    domain.endsWith('.') ||\n    domain.endsWith('-')\n  ) {\n    throw new Error('Invalid cookie domain')\n  }\n}\n\nconst IMFDays = [\n  'Sun', 'Mon', 'Tue', 'Wed',\n  'Thu', 'Fri', 'Sat'\n]\n\nconst IMFMonths = [\n  'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n  'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n]\n\nconst IMFPaddedNumbers = Array(61).fill(0).map((_, i) => i.toString().padStart(2, '0'))\n\n/**\n * @see https://www.rfc-editor.org/rfc/rfc7231#section-7.1.1.1\n * @param {number|Date} date\n  IMF-fixdate  = day-name \",\" SP date1 SP time-of-day SP GMT\n  ; fixed length/zone/capitalization subset of the format\n  ; see Section 3.3 of [RFC5322]\n\n  day-name     = %x4D.6F.6E ; \"Mon\", case-sensitive\n              / %x54.75.65 ; \"Tue\", case-sensitive\n              / %x57.65.64 ; \"Wed\", case-sensitive\n              / %x54.68.75 ; \"Thu\", case-sensitive\n              / %x46.72.69 ; \"Fri\", case-sensitive\n              / %x53.61.74 ; \"Sat\", case-sensitive\n              / %x53.75.6E ; \"Sun\", case-sensitive\n  date1        = day SP month SP year\n                  ; e.g., 02 Jun 1982\n\n  day          = 2DIGIT\n  month        = %x4A.61.6E ; \"Jan\", case-sensitive\n              / %x46.65.62 ; \"Feb\", case-sensitive\n              / %x4D.61.72 ; \"Mar\", case-sensitive\n              / %x41.70.72 ; \"Apr\", case-sensitive\n              / %x4D.61.79 ; \"May\", case-sensitive\n              / %x4A.75.6E ; \"Jun\", case-sensitive\n              / %x4A.75.6C ; \"Jul\", case-sensitive\n              / %x41.75.67 ; \"Aug\", case-sensitive\n              / %x53.65.70 ; \"Sep\", case-sensitive\n              / %x4F.63.74 ; \"Oct\", case-sensitive\n              / %x4E.6F.76 ; \"Nov\", case-sensitive\n              / %x44.65.63 ; \"Dec\", case-sensitive\n  year         = 4DIGIT\n\n  GMT          = %x47.4D.54 ; \"GMT\", case-sensitive\n\n  time-of-day  = hour \":\" minute \":\" second\n              ; 00:00:00 - 23:59:60 (leap second)\n\n  hour         = 2DIGIT\n  minute       = 2DIGIT\n  second       = 2DIGIT\n */\nfunction toIMFDate (date) {\n  if (typeof date === 'number') {\n    date = new Date(date)\n  }\n\n  return `${IMFDays[date.getUTCDay()]}, ${IMFPaddedNumbers[date.getUTCDate()]} ${IMFMonths[date.getUTCMonth()]} ${date.getUTCFullYear()} ${IMFPaddedNumbers[date.getUTCHours()]}:${IMFPaddedNumbers[date.getUTCMinutes()]}:${IMFPaddedNumbers[date.getUTCSeconds()]} GMT`\n}\n\n/**\n max-age-av        = \"Max-Age=\" non-zero-digit *DIGIT\n                       ; In practice, both expires-av and max-age-av\n                       ; are limited to dates representable by the\n                       ; user agent.\n * @param {number} maxAge\n */\nfunction validateCookieMaxAge (maxAge) {\n  if (maxAge < 0) {\n    throw new Error('Invalid cookie max-age')\n  }\n}\n\n/**\n * @see https://www.rfc-editor.org/rfc/rfc6265#section-4.1.1\n * @param {import('./index').Cookie} cookie\n */\nfunction stringify (cookie) {\n  if (cookie.name.length === 0) {\n    return null\n  }\n\n  validateCookieName(cookie.name)\n  validateCookieValue(cookie.value)\n\n  const out = [`${cookie.name}=${cookie.value}`]\n\n  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-cookie-prefixes-00#section-3.1\n  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-cookie-prefixes-00#section-3.2\n  if (cookie.name.startsWith('__Secure-')) {\n    cookie.secure = true\n  }\n\n  if (cookie.name.startsWith('__Host-')) {\n    cookie.secure = true\n    cookie.domain = null\n    cookie.path = '/'\n  }\n\n  if (cookie.secure) {\n    out.push('Secure')\n  }\n\n  if (cookie.httpOnly) {\n    out.push('HttpOnly')\n  }\n\n  if (typeof cookie.maxAge === 'number') {\n    validateCookieMaxAge(cookie.maxAge)\n    out.push(`Max-Age=${cookie.maxAge}`)\n  }\n\n  if (cookie.domain) {\n    validateCookieDomain(cookie.domain)\n    out.push(`Domain=${cookie.domain}`)\n  }\n\n  if (cookie.path) {\n    validateCookiePath(cookie.path)\n    out.push(`Path=${cookie.path}`)\n  }\n\n  if (cookie.expires && cookie.expires.toString() !== 'Invalid Date') {\n    out.push(`Expires=${toIMFDate(cookie.expires)}`)\n  }\n\n  if (cookie.sameSite) {\n    out.push(`SameSite=${cookie.sameSite}`)\n  }\n\n  for (const part of cookie.unparsed) {\n    if (!part.includes('=')) {\n      throw new Error('Invalid unparsed')\n    }\n\n    const [key, ...value] = part.split('=')\n\n    out.push(`${key.trim()}=${value.join('=')}`)\n  }\n\n  return out.join('; ')\n}\n\nmodule.exports = {\n  isCTLExcludingHtab,\n  validateCookieName,\n  validateCookiePath,\n  validateCookieValue,\n  toIMFDate,\n  stringify\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}